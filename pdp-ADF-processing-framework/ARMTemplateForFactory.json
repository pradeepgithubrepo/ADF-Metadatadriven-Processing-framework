{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "pdp-ADF-processing-framework"
		},
		"AzureBlobStoragelinkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStoragelinkedservice'"
		},
		"BlobLinkedservice_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'BlobLinkedservice'"
		},
		"HDInsightlinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HDInsightlinkedService'"
		},
		"SanityAzureFunction_functionKey": {
			"type": "secureString",
			"metadata": "Secure string for 'functionKey' of 'SanityAzureFunction'"
		},
		"scriptlinkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'scriptlinkedservice'"
		},
		"BlobLinkedservice_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://pradeepdatalake.dfs.core.windows.net"
		},
		"HDInsightlinkedService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin"
		},
		"source-trigger_properties_Stage1-Workflow_parameters_sourcefile": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"source-trigger_properties_Stage1-Workflow_parameters_sourcepath": {
			"type": "string",
			"defaultValue": "@triggerBody().folderPath"
		},
		"source-trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/4252b742-3cd4-47a1-af43-30bb66d77529/resourceGroups/pradeep/providers/Microsoft.Storage/storageAccounts/pradeepdatalake"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Email_Trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Emailtrig_activity",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-18.southeastasia.logic.azure.com:443/workflows/4d2d87193d9249209f2c5379909f6735/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=FVvtH47DlXlcAuQDf4sb6PStexQOWzD_Q_2QpXB3vts",
							"method": "POST",
							"headers": {},
							"body": {
								"DataFactoryName": "@{pipeline().DataFactory}",
								"PipelineName": "@{pipeline().Pipeline}",
								"Subject": "@{pipeline().parameters.Subject}",
								"ErrorMessage": "@{pipeline().parameters.ErrorMessage}",
								"EmailTo": "@pipeline().parameters.EmailTo"
							}
						}
					}
				],
				"parameters": {
					"EmailTo": {
						"type": "string"
					},
					"ErrorMessage": {
						"type": "string"
					},
					"Subject": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stage1-Workflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SanityCheck",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "BlobValidator",
							"method": "GET",
							"headers": {
								"containername": {
									"value": "@pipeline().parameters.sourcepath",
									"type": "Expression"
								},
								"filename": {
									"value": "@pipeline().parameters.sourcefile",
									"type": "Expression"
								}
							},
							"body": ""
						},
						"linkedServiceName": {
							"referenceName": "SanityAzureFunction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ParameterLookup",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SanityCheck",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ParmDS",
								"type": "DatasetReference",
								"parameters": {
									"filecontainer": "@activity('SanityCheck').output.map.parmcontainer",
									"filepath": "@activity('SanityCheck').output.map.parmloc"
								}
							}
						}
					},
					{
						"name": "Email_Trigger",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SanityCheck",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Email_Trigger",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Subject": "Data-factory Pipeline Failed",
								"ErrorMessage": {
									"value": "@activity('SanityCheck').Error.Message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Hive_Processing",
						"type": "HDInsightHive",
						"dependsOn": [
							{
								"activity": "ParameterLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "hql/infectcase.hql",
							"defines": {
								"srclocation": "abfss://source@pradeepdatalake.dfs.core.windows.net/activeinfections/total_cases.csv",
								"loadingdate": {
									"value": "@formatDateTime(utcnow(),'yyyy-MM-dd')",
									"type": "Expression"
								}
							},
							"scriptLinkedService": {
								"referenceName": "BlobLinkedservice",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "HDInsightlinkedService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"sourcefile": {
						"type": "string",
						"defaultValue": "tmpsrcfile"
					},
					"sourcepath": {
						"type": "string",
						"defaultValue": "tmpsrcpath"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SanityAzureFunction')]",
				"[concat(variables('factoryId'), '/datasets/ParmDS')]",
				"[concat(variables('factoryId'), '/pipelines/Email_Trigger')]",
				"[concat(variables('factoryId'), '/linkedServices/BlobLinkedservice')]",
				"[concat(variables('factoryId'), '/linkedServices/HDInsightlinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Stage1_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "source_to_raw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ParmDS",
								"type": "DatasetReference",
								"parameters": {
									"filecontainer": "@pipeline().parameters.SourceFile",
									"filepath": "@pipeline().parameters.SourcePath"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "destDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"SourceFile": {
						"type": "string"
					},
					"SourcePath": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ParmDS')]",
				"[concat(variables('factoryId'), '/datasets/destDS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/test_dummy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Hive1",
						"type": "HDInsightHive",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "hql/infectcase.hql",
							"defines": {
								"srclocation": "abfss://source@pradeepdatalake.dfs.core.windows.net/activeinfections/total_cases.csv",
								"loadingdate": {
									"value": "@formatDateTime(utcnow(),'yyyy-MM-dd')",
									"type": "Expression"
								}
							},
							"scriptLinkedService": {
								"referenceName": "BlobLinkedservice",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "HDInsightlinkedService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobLinkedservice')]",
				"[concat(variables('factoryId'), '/linkedServices/HDInsightlinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParmDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobLinkedservice",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filecontainer": {
						"type": "string",
						"defaultValue": "@activity('SanityCheck').output.map.parmcontainer"
					},
					"filepath": {
						"type": "string",
						"defaultValue": "@activity('SanityCheck').output.map.parmloc"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filepath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().filecontainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobLinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/destDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BlobLinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobLinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStoragelinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStoragelinkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobLinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('BlobLinkedservice_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('BlobLinkedservice_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HDInsightlinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsight",
				"typeProperties": {
					"clusterUri": "https://pradeephdinsight.azurehdinsight.net",
					"userName": "[parameters('HDInsightlinkedService_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HDInsightlinkedService_password')]"
					},
					"isEspEnabled": false,
					"fileSystem": "log",
					"linkedServiceName": {
						"referenceName": "BlobLinkedservice",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BlobLinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SanityAzureFunction')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFunction",
				"typeProperties": {
					"functionAppUrl": "https://validatorfunc.azurewebsites.net",
					"functionKey": {
						"type": "SecureString",
						"value": "[parameters('SanityAzureFunction_functionKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/scriptlinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('scriptlinkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/source-trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Trigger to kick of when a vendor file is received.",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Stage1-Workflow",
							"type": "PipelineReference"
						},
						"parameters": {
							"sourcefile": "[parameters('source-trigger_properties_Stage1-Workflow_parameters_sourcefile')]",
							"sourcepath": "[parameters('source-trigger_properties_Stage1-Workflow_parameters_sourcepath')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/source/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('source-trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Stage1-Workflow')]"
			]
		}
	]
}